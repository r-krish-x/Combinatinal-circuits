Design

// Code your design here
module mux_2x1(i,s,y);
  input[1:0]i;
  input s;
  output reg y;
  integer k;
  
  always @(*)begin
    for(k=0;k<2;k=k+1)begin
      if(s==k)
      y=i[k];
  end
  end
endmodule

/*module mux_2x1(input[1:0]i,
               input s,
               output reg y);
  always@(*)begin
    y=i[s];
  end
endmodule


  
*/

Testbench


module mux_2x1_tb;
  reg [1:0] i;   // means i[1], i[0]
  reg s;        // in output also i=01 i[1]=0, i[0]=1
  wire y;
  integer k;

  mux_2x1 dut (.i(i),.s(s), .y(y));

  initial begin
    $monitor("Time=%0t  i=%b  s=%b  y=%b",$time,i,s,y);
    
    for (k = 0; k < 8; k = k + 1) begin
      {s,i} = k[2:0];
      #5;       
    end
    #5;
    $finish;
  end

  initial begin
    $dumpfile("dump.vcd");
    $dumpvars(0,mux_2x1_tb);
  end
endmodule
