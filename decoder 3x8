////////////////////////Design//////////////////////////////

module decoder_3x8(i,en,y);
  input [2:0]i;
  input en;
  output reg[7:0]y;
  integer k;
  
  always@(*)begin
    y=8'b0000_0000;
    if(en)begin
      for(k=0;k<8;k=k+1)begin
        if(k==i)
          y[k]=1;
      end
    end
  end
endmodule



/*
module decoder_3x8(
  input [2:0]i,
  input en,
  output reg[7:0]y);
 integer k;
  
always@(*)begin
  if(en)begin
    for(k=0;k<8;k=k+1)begin
      y[k]=(i==k)?1:0;
    end
  end
  else begin
    y=8'b0000_0000;
  end
end
endmodule
*/

//////////////////////Testbench////////////////////////////

    // Code your testbench here
// or browse Examples
module tb_decoder_3x8;
  reg [2:0]i;
  reg en;
  wire[7:0]y;
  integer k;
  
  decoder_3x8 dut(.i(i),.en(en),.y(y));
  
  initial begin
    en=0;
    i=3'b000;
    
    $monitor("time=%0t  i=%b  en=%b  y=%b",$time,i,en,y);
    
    #10 en=1;
    for(k=0;k<8;k=k+1)begin
      i=k;
      #5;
    end
    
    #10 en=0;
	i=3'b000;
    
    #5;
    $finish;
  end
  
  initial begin 
    $dumpfile("dump.vcd");
    $dumpvars(0,tb_decoder_3x8);
  end
endmodule
